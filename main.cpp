#include <iostream>
#include <string>
#include <Windows.h>
#include <mmsystem.h>
#include <thread>
#include <experimental/filesystem>

#pragma comment(lib, "winmm.lib")

void ChangeBackground() {
    std::experimental::filesystem::path currentPath = std::experimental::filesystem::current_path();
    std::wstring file = (currentPath / L"rick.jpg").wstring();

    // Change the background
    int ret = SystemParametersInfoW(SPI_SETDESKWALLPAPER, 0, (void*)file.c_str(), SPIF_UPDATEINIFILE);
}

void PlayMusic() {
	PlaySound(TEXT("rickroll.wav"), NULL, SND_SYNC);
	// 3rd party module to play music
}

void LockScreenWhile() {
	while (true) {
		LockWorkStation();
		std::this_thread::sleep_for(std::chrono::seconds(1));
	}
}

void MaxVolume() {
	for (int i = 0; i < 1000; i++) {
		keybd_event(VK_VOLUME_UP, 0, 0, 0);  
		keybd_event(VK_VOLUME_UP, 0, KEYEVENTF_KEYUP, 0);
	}
}


void DayReminder() {
	const char* url = "index.html";
	ShellExecuteA(NULL, "open", url, NULL, NULL, SW_SHOWNORMAL);
}

int main() {
	// ChangeBackground();
	// MaxVolume();
	// DayReminder();
	// PlayMusic();
	return 0;
} 
